// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Jakhongir",
            "email": "anorboev.jahongir8007@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/load/posts": {
            "post": {
                "description": "loads posts to database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post-loader"
                ],
                "summary": "load posts",
                "parameters": [
                    {
                        "description": "load posts",
                        "name": "load",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.LoadPostsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/post_loader_service.LoadingStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/post.Empty"
                        }
                    }
                }
            }
        },
        "/load/status/{id}": {
            "get": {
                "description": "gets loading status by process id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post-loader"
                ],
                "summary": "get load status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/post_loader_service.LoadingStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/post.Empty"
                        }
                    }
                }
            }
        },
        "/post/delete/{id}": {
            "delete": {
                "description": "deletes post by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "delete post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/post.Empty"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/post.Empty"
                        }
                    }
                }
            }
        },
        "/post/get/{id}": {
            "get": {
                "description": "gets post by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "get post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/post.Post"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/post.Empty"
                        }
                    }
                }
            }
        },
        "/post/list": {
            "get": {
                "description": "gets posts by pages and limits",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "get list of posts",
                "parameters": [
                    {
                        "description": "params",
                        "name": "pagesAndLimits",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.GetListPostsReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/post.Posts"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/post.Empty"
                        }
                    }
                }
            }
        },
        "/post/update": {
            "put": {
                "description": "updates post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "update post",
                "parameters": [
                    {
                        "description": "post to update",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.UpdatePostReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/post.Post"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/post.Empty"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "post.Empty": {
            "type": "object"
        },
        "post.Post": {
            "type": "object",
            "properties": {
                "Body": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer"
                },
                "Title": {
                    "type": "string"
                }
            }
        },
        "post.Posts": {
            "type": "object",
            "properties": {
                "Posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/post.Post"
                    }
                }
            }
        },
        "post_loader_service.LoadingStatus": {
            "type": "object",
            "properties": {
                "ProcessId": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                },
                "TotalWork": {
                    "type": "integer"
                },
                "WorkOfDone": {
                    "type": "integer"
                }
            }
        },
        "structs.GetListPostsReq": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                }
            }
        },
        "structs.LoadPostsReq": {
            "type": "object",
            "properties": {
                "pages": {
                    "type": "integer"
                }
            }
        },
        "structs.UpdatePostReq": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:9003",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Post api",
	Description:      "This is a post server",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
