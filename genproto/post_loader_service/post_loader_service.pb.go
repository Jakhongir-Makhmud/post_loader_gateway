// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: post_loader_service/post_loader_service.proto

package post_loader_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() {
	proto.RegisterFile("post_loader_service/post_loader_service.proto", fileDescriptor_f5c3db7ada34005e)
}

var fileDescriptor_f5c3db7ada34005e = []byte{
	// 155 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x2d, 0xc8, 0x2f, 0x2e,
	0x89, 0xcf, 0xc9, 0x4f, 0x4c, 0x49, 0x2d, 0x8a, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5,
	0xc7, 0x22, 0xa6, 0x57, 0x50, 0x94, 0x5f, 0x92, 0x2f, 0x24, 0x8c, 0x45, 0x4a, 0x4a, 0x95, 0x80,
	0x19, 0x10, 0xbd, 0x46, 0xbb, 0x18, 0xb9, 0x84, 0x03, 0x30, 0x55, 0x0a, 0x05, 0x73, 0x71, 0xfa,
	0xe4, 0x27, 0xa6, 0x80, 0xa4, 0x8a, 0x85, 0x94, 0xf4, 0xb0, 0x59, 0x0e, 0x93, 0x0f, 0x48, 0x2c,
	0x4a, 0xcc, 0x95, 0xc2, 0xad, 0x26, 0x33, 0x2f, 0x3d, 0xb8, 0x24, 0xb1, 0xa4, 0xb4, 0x58, 0xc8,
	0x8f, 0x8b, 0xc7, 0x3d, 0xb5, 0xc4, 0x2b, 0x3f, 0x09, 0xca, 0x97, 0xc2, 0xaa, 0xc7, 0x2b, 0x3f,
	0xc9, 0x33, 0x85, 0x18, 0xf3, 0x9c, 0x04, 0x4e, 0x3c, 0x92, 0x63, 0xbc, 0xf0, 0x48, 0x8e, 0xf1,
	0xc1, 0x23, 0x39, 0xc6, 0x19, 0x8f, 0xe5, 0x18, 0x92, 0xd8, 0xc0, 0xbe, 0x32, 0x06, 0x04, 0x00,
	0x00, 0xff, 0xff, 0x9e, 0xb8, 0xc7, 0x7b, 0x42, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PostLoaderServiceClient is the client API for PostLoaderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PostLoaderServiceClient interface {
	LoadPosts(ctx context.Context, in *LoadPostParam, opts ...grpc.CallOption) (*LoadingStatus, error)
	GetJobStatus(ctx context.Context, in *JobId, opts ...grpc.CallOption) (*LoadingStatus, error)
}

type postLoaderServiceClient struct {
	cc *grpc.ClientConn
}

func NewPostLoaderServiceClient(cc *grpc.ClientConn) PostLoaderServiceClient {
	return &postLoaderServiceClient{cc}
}

func (c *postLoaderServiceClient) LoadPosts(ctx context.Context, in *LoadPostParam, opts ...grpc.CallOption) (*LoadingStatus, error) {
	out := new(LoadingStatus)
	err := c.cc.Invoke(ctx, "/post_loader_service.Post_loader_service/LoadPosts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postLoaderServiceClient) GetJobStatus(ctx context.Context, in *JobId, opts ...grpc.CallOption) (*LoadingStatus, error) {
	out := new(LoadingStatus)
	err := c.cc.Invoke(ctx, "/post_loader_service.Post_loader_service/GetJobStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PostLoaderServiceServer is the server API for PostLoaderService service.
type PostLoaderServiceServer interface {
	LoadPosts(context.Context, *LoadPostParam) (*LoadingStatus, error)
	GetJobStatus(context.Context, *JobId) (*LoadingStatus, error)
}

// UnimplementedPostLoaderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPostLoaderServiceServer struct {
}

func (*UnimplementedPostLoaderServiceServer) LoadPosts(ctx context.Context, req *LoadPostParam) (*LoadingStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadPosts not implemented")
}
func (*UnimplementedPostLoaderServiceServer) GetJobStatus(ctx context.Context, req *JobId) (*LoadingStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJobStatus not implemented")
}

func RegisterPostLoaderServiceServer(s *grpc.Server, srv PostLoaderServiceServer) {
	s.RegisterService(&_PostLoaderService_serviceDesc, srv)
}

func _PostLoaderService_LoadPosts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadPostParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostLoaderServiceServer).LoadPosts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/post_loader_service.Post_loader_service/LoadPosts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostLoaderServiceServer).LoadPosts(ctx, req.(*LoadPostParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostLoaderService_GetJobStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostLoaderServiceServer).GetJobStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/post_loader_service.Post_loader_service/GetJobStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostLoaderServiceServer).GetJobStatus(ctx, req.(*JobId))
	}
	return interceptor(ctx, in, info, handler)
}

var _PostLoaderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "post_loader_service.Post_loader_service",
	HandlerType: (*PostLoaderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LoadPosts",
			Handler:    _PostLoaderService_LoadPosts_Handler,
		},
		{
			MethodName: "GetJobStatus",
			Handler:    _PostLoaderService_GetJobStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "post_loader_service/post_loader_service.proto",
}
